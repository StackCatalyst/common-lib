name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Run tests
        run: go test -v ./...

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            
            const lastRelease = releases[0]?.tag_name || '';
            const newTag = process.env.GITHUB_REF.replace('refs/tags/', '');
            
            const { stdout } = await exec.getExecOutput(
              'git',
              ['log', `${lastRelease}..${newTag}`, '--pretty=format:- %s%n%b']
            );
            
            return stdout;

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes
            ${{ steps.changelog.outputs.result }}
            
            ## Installation
            ```bash
            go get github.com/StackCatalyst/common-lib@${{ github.ref }}
            ```
            
            ## Documentation
            See [Integration Guide](docs/INTEGRATION.md) for usage instructions.
          draft: false
          prerelease: false

  notify:
    name: Notify Team
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'releases'
          slack-message: "New version of common-lib released: ${{ github.ref }}\nSee release notes: ${{ github.event.release.html_url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 